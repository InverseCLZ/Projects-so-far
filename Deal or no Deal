import java.util.List;
import java.util.Arrays;
import java.util.Collections;

public class Game {

    private Case[] cases = new Case[26];
    private Player player = new Player();
    private Banker banker = new Banker();
    private int myAmount = 0;
    private int turn = 1;
    private int briefCases = 26;
    private int casesToRemove = 6;
    private int offer = 0;
    private boolean gameContinue = true;

    public void caseSetup() {

        List<Integer> values = Arrays.asList(1, 5, 10, 100, 500, 750, 1000, 20000, 50000, 75000, 95000,
                100000, 150000, 250000, 350000, 400000, 450000, 500000, 600000, 700000, 25, 900000, 1000000, 1500000, 300, 900000);

        Collections.shuffle(values);

        for (int i = 0; i < cases.length; i++) {
            int amount = values.get(i);
            cases[i] = new Case(amount, i + 1);
        }
    }
    public void showCase(){
        for (int j = 0; j < cases.length; j++) {
            System.out.print("\t[" + cases[j].getFace() + "] ");
            if (j % 5 == 4) {
                System.out.println();
            }
        }
    }

    public void game(){
        caseSetup();
        showCase();

        myAmount = player.userCase(cases);
        briefCases--;

        while(gameContinue==true){

            if(briefCases == 25||briefCases == 19 ||briefCases == 14 || briefCases == 10 ||briefCases == 7){
                for(int counter = casesToRemove;counter>0;counter--){
                    player.removeCase(counter,cases);
                    briefCases--;
                    showCase();
                }
                offer = banker.getOffer(turn,cases,myAmount);
                gameContinue = player.dnd();
                casesToRemove--;
                turn++;
            }else if(briefCases == 1){
                player.removeCase(1,cases);
                offer = banker.getOffer(turn,cases,myAmount);
                gameContinue = player.dnd();
                casesToRemove--;
                briefCases--;
                turn++;
            }
            else{
                player.removeCase(1,cases);
                offer = banker.getOffer(turn,cases,myAmount);
                gameContinue = player.dnd();
                casesToRemove--;
                briefCases--;
                turn++;
            }
        }
        finishGame();
    }
    public void finishGame(){
        if(briefCases == 0){
            System.out.println("You've rejected the Offer of banker");
            System.out.println("You've won "+myAmount+"And your Case is Larger Than Bankers Offer: "+offer);
        }else{
            System.out.println("Your Accept the offer of banker");
            System.out.println("You've won "+myAmount+" and the Bankers offer is :"+offer);
        }
    }

}

Banker Class

public class Banker{

    private int total = 0;
    private int numOfSamples = 0;
    private int average = 0;
    private int offer = 0;

    public void setOffer(int turn,Case[] cases,int myAmount){
        for(int i = 0 ;  i < cases.length;i++){
            if(!cases[i].Removed()){
                total = myAmount+cases[i].getValue();
                numOfSamples++;
            }
        }
        average = myAmount+total/numOfSamples;
        offer = average*turn/10;
    }

    public int getOffer(int turn,Case[] cases,int myAmount){
        setOffer(turn,cases,myAmount);
        System.out.print("The Bankers Offer Is: "+offer);
        return offer;
    }
}

The Briefcase Class

public class Case{

    private int value = 0;
    private String face;
    private boolean removed = false;

    public Case(int nValue,int nFace){
        this.value = nValue;
        this.face = Integer.toString(nFace);
    }

    public int getValue(){
        return value;
    }

    public String getFace(){
        return face;
    }

    public boolean Removed()
    {
        return removed;
    }

    public void remove(){
        removed = true;
        face = "X";
    }
}

Main class

public class GameTest{

    public static void main(String[] args){

        Game DND = new Game();
        DND.game();
    }
}
public class Banker{

    private int total = 0;
    private int numOfSamples = 0;
    private int average = 0;
    private int offer = 0;

    public void setOffer(int turn,Case[] cases,int myAmount){
        for(int i = 0 ;  i < cases.length;i++){
            if(!cases[i].Removed()){
                total = myAmount+cases[i].getValue();
                numOfSamples++;
            }
        }
        average = myAmount+total/numOfSamples;
        offer = average*turn/10;
    }

    public int getOffer(int turn,Case[] cases,int myAmount){
        setOffer(turn,cases,myAmount);
        System.out.print("The Bankers Offer Is: "+offer);
        return offer;
    }
}
public class Case{

    private int value = 0;
    private String face;
    private boolean removed = false;

    public Case(int nValue,int nFace){
        this.value = nValue;
        this.face = Integer.toString(nFace);
    }

    public int getValue(){
        return value;
    }

    public String getFace(){
        return face;
    }

    public boolean Removed()
    {
        return removed;
    }

    public void remove(){
        removed = true;
        face = "X";
    }
}
public class GameTest{

    public static void main(String[] args){

        Game DND = new Game();
        DND.game();
    }
}
